---

- name: Install openstack.py dynamic inventory
  copy:
    src: 'openstack.py'
    dest: '{{ local_working_dir }}/openstack.py'
    mode: 0755

- name: Install clouds.yaml
  when: clouds_yaml is defined
  copy:
    dest: '{{ local_working_dir }}/clouds.yaml'
    content: '{{ clouds_yaml }}'
  no_log: true

- name: Install stackrc
  when: stackrc is defined
  copy:
    dest: '{{ local_working_dir }}/stackrc'
    content: '{{ stackrc }}'
  no_log: true

#required for liberty based deployments
- name: fetch all nodes from openstack dynamic inventory
  shell: >
      [ -f '{{ local_working_dir }}/stackrc' ] && source {{ local_working_dir }}/stackrc;
      python {{ local_working_dir }}/openstack.py --list
  args:
    chdir: '{{ local_working_dir }}'
  register: registered_nodes_output
  no_log: true

- name: set_fact for openstack inventory overcloud nodes
  set_fact:
    registered_overcloud_nodes: "{{ (registered_nodes_output.stdout | from_json)._meta.hostvars | json_query(q) }}"
  vars:
    q: "* | [?contains(openstack.name, 'overcloud')]"

- name: set_fact for openstack inventory undercloud node
  set_fact:
    registered_undercloud_nodes: "{{ (registered_nodes_output.stdout | from_json)._meta.hostvars | json_query(q) }}"
  vars:
    q: "* | [?contains(openstack.name, 'undercloud')]"

- name: Add overcloud nodes to inventory, accessed via bastion
  with_items: "{{ registered_overcloud_nodes }}"
  add_host:
    name: '{{ item.openstack.name }}'
    groups: "overcloud,{{ item.openstack.name | regex_replace('overcloud-(?:nova)?([a-zA-Z0-9_]+)-[0-9]+$', '\\1') }}"
    ansible_host: '{{ item.openstack.name }}'
    ansible_fqdn: '{{ item.openstack.name }}'
    ansible_user: "{{ overcloud_user | default('heat-admin') }}"
    ansible_private_key_file: "{{ overcloud_key }}"
    ansible_ssh_extra_args: "-F {{ local_working_dir }}/ssh.config.ansible"
    private_v4: '{{ item.openstack.private_v4 }}'

- name: Add undercloud node to inventory, accessed via floating IP
  with_items: "{{ registered_undercloud_nodes }}"
  add_host:
    name: undercloud
    groups: undercloud
    ansible_host: '{{ item.ansible_host }}'
    ansible_fqdn: undercloud
    ansible_user: '{{ undercloud_user }}'
    ansible_private_key_file: '{{ undercloud_key }}'

- name: Bastion accessing requirements
  assert:
    that:
      - hostvars['undercloud'] is defined
      - hostvars['undercloud'].ansible_host is defined

- name: set ssh proxy command prefix for accessing nodes via bastion
  set_fact:
    ssh_proxy_command: ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no
      -o ConnectTimeout=60 -i {{ hostvars['undercloud'].ansible_private_key_file }}
      {{ ssh_user }}@{{ hostvars['undercloud'].ansible_host }}

- name: create inventory from template
  delegate_to: localhost
  template:
    src: 'inventory.j2'
    dest: '{{ local_working_dir }}/hosts'
  run_once: true

- name: regenerate ssh config
  delegate_to: localhost
  template:
    src: 'openstack_ssh_config.j2'
    dest: '{{ local_working_dir }}/ssh.config.ansible'
    mode: 0755
  run_once: true
